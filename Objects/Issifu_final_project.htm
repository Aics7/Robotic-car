<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Issifu_final_project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Issifu_final_project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6150002: Last Updated: Fri Dec 18 23:49:41 2020
<BR><P>
<H3>Maximum Stack Usage =         72 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; lcd_goto &rArr; lcd_write_instruc
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[29]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[16]">CMP0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1f]">DAC0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[6]">DMA0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[7]">DMA1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[8]">DMA2_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[9]">DMA3_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[28]">DefaultISR</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(.text)
 <LI><a href="#[b]">FTFA_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[e]">I2C0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[f]">I2C1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[d]">LLWU_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[22]">LPTMR0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[c]">LVD_LVW_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[21]">MCG_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1c]">PIT_IRQHandler</a> from ultrasonic.o(.text.PIT_IRQHandler) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[24]">PORTA_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[25]">PORTD_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1a]">RTC_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1b]">RTC_Seconds_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[a]">Reserved20_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1d]">Reserved39_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[23]">Reserved45_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[10]">SPI0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[11]">SPI1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from millis.o(.text.SysTick_Handler) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[26]">SystemInit</a> from system_mkl25z4.o(.text.SystemInit) referenced from startup_mkl25z4.o(.text)
 <LI><a href="#[17]">TPM0_IRQHandler</a> from servo.o(.text.TPM0_IRQHandler) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[18]">TPM1_IRQHandler</a> from move.o(.text.TPM1_IRQHandler) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[19]">TPM2_IRQHandler</a> from ultrasonic.o(.text.TPM2_IRQHandler) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[20]">TSI0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[12]">UART0_IRQHandler</a> from bluetooth.o(.text.UART0_IRQHandler) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[14]">UART2_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1e]">USB0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[27]">__main</a> from __main.o(!!!main) referenced from startup_mkl25z4.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[78]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[79]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2d]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[7a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[7b]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))

<P><STRONG><a name="[2e]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent_end
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[2f]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[34]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[7c]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[80]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[81]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[82]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[83]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[84]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[85]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[86]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[87]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[88]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[89]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[90]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[39]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[91]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[92]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[93]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[94]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[95]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[96]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[97]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[2b]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[98]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[31]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[33]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[99]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[35]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; lcd_goto &rArr; lcd_write_instruc
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[9a]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[44]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[38]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[9b]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(.text)
</UL>
<P><STRONG><a name="[b]"></a>FTFA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>LLWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>LPTMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>Reserved39_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>Reserved45_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_mkl25z4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3c]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>__aeabi_idivmod</STRONG> (Thumb, 472 bytes, Stack size 8 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_digits
</UL>

<P><STRONG><a name="[9d]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>_printf_cs_common</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[30]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[41]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[32]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[37]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[a0]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a1]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[a2]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a4]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>Init_Comparator_Ldr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ldr.o(.text.Init_Comparator_Ldr))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>Init_UART</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, bluetooth.o(.text.Init_UART))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init_UART
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c]"></a>PIT_IRQHandler</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, ultrasonic.o(.text.PIT_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>Q_Dequeue</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, queues.o(.text.Q_Dequeue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Q_Dequeue
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Empty
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_String
</UL>

<P><STRONG><a name="[4a]"></a>Q_Empty</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, queues.o(.text.Q_Empty))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Dequeue
</UL>

<P><STRONG><a name="[4b]"></a>Q_Enqueue</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, queues.o(.text.Q_Enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Q_Enqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Full
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_String
</UL>

<P><STRONG><a name="[4c]"></a>Q_Full</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, queues.o(.text.Q_Full))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Enqueue
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_String
</UL>

<P><STRONG><a name="[51]"></a>Q_Init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, queues.o(.text.Q_Init))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_init
</UL>

<P><STRONG><a name="[4d]"></a>RBBBR</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, led.o(.text.RBBBR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RBBBR
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>Send_String</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, bluetooth.o(.text.Send_String))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Send_String &rArr; Q_Enqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Full
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Enqueue
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Dequeue
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, millis.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_mkl25z4.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(.text)
</UL>
<P><STRONG><a name="[17]"></a>TPM0_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, servo.o(.text.TPM0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TPM1_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, move.o(.text.TPM1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TPM2_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, ultrasonic.o(.text.TPM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART0_IRQHandler</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, bluetooth.o(.text.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART0_IRQHandler &rArr; Q_Enqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Full
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Enqueue
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Empty
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Dequeue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>bluetooth_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bluetooth.o(.text.bluetooth_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bluetooth_init
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>configure_systick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, millis.o(.text.configure_systick))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_seven_segment
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_leds
</UL>

<P><STRONG><a name="[69]"></a>delay_ms</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lcd.o(.text.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_instruc
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_char
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_string
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_goto
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
</UL>

<P><STRONG><a name="[54]"></a>display</STRONG> (Thumb, 292 bytes, Stack size 0 bytes, seven.o(.text.display))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_digits
</UL>

<P><STRONG><a name="[52]"></a>display_digits</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, seven.o(.text.display_digits))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = display_digits &rArr; __aeabi_idiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idiv
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>get_distance</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ultrasonic.o(.text.get_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_distance
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>init_CMP_pin_Ldr</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ldr.o(.text.init_CMP_pin_Ldr))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>init_Timer_IC</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, ultrasonic.o(.text.init_Timer_IC))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_Timer_IC
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>init_move_imer</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, move.o(.text.init_move_imer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_move_imer
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>init_move_pins</STRONG> (Thumb, 164 bytes, Stack size 20 bytes, move.o(.text.init_move_pins))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = init_move_pins
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>init_pin_IC</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ultrasonic.o(.text.init_pin_IC))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>init_pins</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, bluetooth.o(.text.init_pins))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>init_servo_pin</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, servo.o(.text.init_servo_pin))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>init_servo_timer</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, servo.o(.text.init_servo_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_servo_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>initialize_lcd</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, lcd.o(.text.initialize_lcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = initialize_lcd
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>initialize_leds</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, led.o(.text.initialize_leds))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = initialize_leds
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_systick
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>initialize_pit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, ultrasonic.o(.text.initialize_pit))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>initialize_seven_segment</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, seven.o(.text.initialize_seven_segment))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = initialize_seven_segment
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_systick
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>initialize_timer</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, ultrasonic.o(.text.initialize_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = initialize_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>lcd_clear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd.o(.text.lcd_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lcd_clear &rArr; lcd_write_instruc
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_instruc
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>lcd_goto</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lcd.o(.text.lcd_goto))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lcd_goto &rArr; lcd_write_instruc
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_instruc
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>lcd_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(.text.lcd_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lcd_init &rArr; lcd_write_instruc
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_instruc
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>lcd_write_char</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lcd.o(.text.lcd_write_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcd_write_char
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_string
</UL>

<P><STRONG><a name="[6a]"></a>lcd_write_instruc</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, lcd.o(.text.lcd_write_instruc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcd_write_instruc
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_goto
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
</UL>

<P><STRONG><a name="[6e]"></a>lcd_write_string</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lcd.o(.text.lcd_write_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lcd_write_string &rArr; lcd_write_char
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_char
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>main</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = main &rArr; lcd_goto &rArr; lcd_write_instruc
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_reverse
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_string
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_goto
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_timer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_seven_segment
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_pit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_leds
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_lcd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_servo_timer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_servo_pin
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pins
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pin_IC
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_move_pins
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_move_imer
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_Timer_IC
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_CMP_pin_Ldr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_distance
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_digits
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_systick
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_String
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RBBBR
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_UART
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Comparator_Ldr
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[4e]"></a>millis</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, millis.o(.text.millis))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_digits
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RBBBR
</UL>

<P><STRONG><a name="[77]"></a>move_reverse</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, move.o(.text.move_reverse))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_uidiv</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text_divfast))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_distance
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_idiv</STRONG> (Thumb, 434 bytes, Stack size 8 bytes, aeabi_sdivfast.o(.text_divfast))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idiv
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_digits
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[61]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, servo.o(.text.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_servo_timer
</UL>

<P><STRONG><a name="[63]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, servo.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_servo_timer
</UL>

<P><STRONG><a name="[62]"></a>__NVIC_SetPriority</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, servo.o(.text.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_servo_timer
</UL>

<P><STRONG><a name="[59]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ultrasonic.o(.text.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_timer
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_Timer_IC
</UL>

<P><STRONG><a name="[5b]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ultrasonic.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_timer
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_Timer_IC
</UL>

<P><STRONG><a name="[5a]"></a>__NVIC_SetPriority</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ultrasonic.o(.text.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_timer
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_Timer_IC
</UL>

<P><STRONG><a name="[47]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bluetooth.o(.text.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_UART
</UL>

<P><STRONG><a name="[48]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bluetooth.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_UART
</UL>

<P><STRONG><a name="[46]"></a>__NVIC_SetPriority</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bluetooth.o(.text.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_UART
</UL>

<P><STRONG><a name="[5d]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, move.o(.text.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_move_imer
</UL>

<P><STRONG><a name="[5f]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, move.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_move_imer
</UL>

<P><STRONG><a name="[5e]"></a>__NVIC_SetPriority</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, move.o(.text.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_move_imer
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[43]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[40]"></a>_printf_mbtowc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[3e]"></a>_printf_post_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[3d]"></a>_printf_pre_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<HR></body></html>
